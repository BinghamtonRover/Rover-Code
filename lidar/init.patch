commit e296704de084e7ca39d9dc867e76cbce553d3956
Author: aidan ahram <aidanahram1@gmail.com>
Date:   Wed Jan 29 18:51:16 2025 -0500

    Some handling for bad connections

diff --git a/src/lidar.cpp b/src/lidar.cpp
index 67f367b..00627ba 100644
--- a/src/lidar.cpp
+++ b/src/lidar.cpp
@@ -27,15 +27,22 @@ SickScanApiHandle handleData;
 // };
 
 int mutex = 1;
-int status = 0; 
+int32_t status = 0; 
+char* buffer;
 
 FFI_PLUGIN_EXPORT int32_t init() {
   handle = SickScanApiCreate(0, nullptr);
 
   SickScanApiSetVerboseLevel(handle, 5); // 0=DEBUG, 1=INFO, 2=WARN, 3=ERROR, 4=FATAL or 5=QUIET
   char* args[] = {"lidar.dart", "lidar.launch", "hostname:=169.254.166.55"};
-  if(SickScanApiInitByCli(handle, 3, args) != SICK_SCAN_API_SUCCESS) status = 1;
-  if(SickScanApiRegisterCartesianPointCloudMsg(handle, updateLatestImage) != SICK_SCAN_API_SUCCESS) status = 1;
+  if(status = SickScanApiInitByCli(handle, 3, args) != SICK_SCAN_API_SUCCESS){
+    dispose();
+    return status;
+  }
+  if(status = SickScanApiRegisterCartesianPointCloudMsg(handle, updateLatestImage) != SICK_SCAN_API_SUCCESS){
+    dispose();
+    return status;
+  }
   /// allocate data
   image.OneDArray = (double*)calloc(270, sizeof(double));
   memset(image.OneDArray, -1, 270 * sizeof(double));
@@ -44,6 +51,11 @@ FFI_PLUGIN_EXPORT int32_t init() {
   image.data = (uint8_t*)calloc(3*WIDTH*HEIGHT, sizeof(uint8_t));
   image.height = HEIGHT;
   image.width = WIDTH;
+
+  buffer = (char*)calloc(128, sizeof(char));
+  std::cout << "==============================" << std::endl;
+  std::cout << "\n\n\n Init done with status: " << status << "\n\n\n" <<  std::endl;
+  std::cout << "==============================" << std::endl;
   return status;
 }
 
@@ -58,6 +70,7 @@ FFI_PLUGIN_EXPORT void updateLatestData(const SickScanPointCloudMsg* pointCloudM
   if(pointCloudMsg->height == 0 || pointCloudMsg->row_step == 0 || image.data == nullptr){
     return;
   }
+  //std::cout << "Image height: " << (int) pointCloudMsg->height << ", Width: " << (int) pointCloudMsg->width << std::endl;
   uint64_t midx = image.width / 2;
   uint64_t midy = image.height / 2;
 
@@ -239,6 +252,7 @@ FFI_PLUGIN_EXPORT Image getLatestImage() {
   return image;
 }
 
-FFI_PLUGIN_EXPORT int getStatus(){
+FFI_PLUGIN_EXPORT int32_t getStatus(){
+  SickScanApiGetStatus(handle, &status, buffer, 128);
   return status;
 }
